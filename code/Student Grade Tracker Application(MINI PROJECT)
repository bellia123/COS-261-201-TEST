import java.util.ArrayList;
import java.util.Scanner;

public class StudentGradeTracker {
    private ArrayList<Student> students;
    private Scanner scanner;
    
    // Student class
    private class Student {
        private String name;
        private String matricNo;
        private double grade;
        
        public Student(String name, String matricNo, double grade) {
            this.name = name;
            this.matricNo = matricNo;
            this.grade = grade;
        }
        
        public String toString() {
            return "Name: " + name + " | Matric No: " + matricNo + " | Grade: " + grade;
        }
    }
    
    // Constructor
    public StudentGradeTracker() {
        students = new ArrayList<>();
        scanner = new Scanner(System.in);
    }
    
    // Method to add a student
    public void addStudent() {
        System.out.print("Enter student name: ");
        String name = scanner.nextLine();
        
        System.out.print("Enter matric number: ");
        String matricNo = scanner.nextLine();
        
        // Check if matric number already exists
        for (Student s : students) {
            if (s.matricNo.equals(matricNo)) {
                System.out.println("A student with this matric number already exists!");
                return;
            }
        }
        
        System.out.print("Enter grade: ");
        double grade = scanner.nextDouble();
        scanner.nextLine(); // Consume newline
        
        students.add(new Student(name, matricNo, grade));
        System.out.println("Student added successfully!");
    }
    
    // Method to update a student's grade
    public void updateGrade() {
        System.out.print("Enter matric number of student to update: ");
        String matricNo = scanner.nextLine();
        
        for (Student s : students) {
            if (s.matricNo.equals(matricNo)) {
                System.out.print("Enter new grade: ");
                double newGrade = scanner.nextDouble();
                scanner.nextLine(); // Consume newline
                
                s.grade = newGrade;
                System.out.println("Grade updated successfully!");
                return;
            }
        }
        
        System.out.println("Student not found!");
    }
    
    // Method to view all students
    public void viewAllStudents() {
        if (students.isEmpty()) {
            System.out.println("No students in the system.");
            return;
        }
        
        System.out.println("\nAll Students:");
        for (int i = 0; i < students.size(); i++) {
            System.out.println((i+1) + ". " + students.get(i));
        }
    }
    
    // Method to view a specific student
    public void viewStudent() {
        System.out.print("Enter matric number of student to view: ");
        String matricNo = scanner.nextLine();
        
        for (Student s : students) {
            if (s.matricNo.equals(matricNo)) {
                System.out.println(s);
                return;
            }
        }
        
        System.out.println("Student not found!");
    }
    
    // Method to calculate class average
    public void calculateAverage() {
        if (students.isEmpty()) {
            System.out.println("No students in the system.");
            return;
        }
        
        double sum = 0;
        for (Student s : students) {
            sum += s.grade;
        }
        
        double average = sum / students.size();
        System.out.println("Class average: " + average);
    }
    
    // Menu method
    public void showMenu() {
        while (true) {
            System.out.println("\n===== STUDENT GRADE TRACKER =====");
            System.out.println("1. Add Student");
            System.out.println("2. Update Grade");
            System.out.println("3. View All Students");
            System.out.println("4. View Specific Student");
            System.out.println("5. Calculate Class Average");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");
            
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            
            switch (choice) {
                case 1:
                    addStudent();
                    break;
                case 2:
                    updateGrade();
                    break;
                case 3:
                    viewAllStudents();
                    break;
